# Set the global container repo.
repository: ghcr.io

# Set the global container repo organization.
organization: unikorn-cloud

# Set the global container tag.
# Defaults to the chart revision, which should be in lock-step with the
# actual release.
# tag:

# Set the docker configuration, doing so will create a secret and link it
# to the service accounts of all the controllers.  You can do something like:
# --set dockerConfig=$(cat ~/.docker/config.json | base64 -w0)
dockerConfig:

# Set the image pull secret on the service accounts of all the controllers.
# This is an alternative to dockerConfigs, but unlikely to play ball with
# ArgoCD as it's a foreign object that needs pruning.
imagePullSecret:

# Cluster manager controller specific configuration.
clusterManagerController:
  # Allows override of the global default image.
  image:

# Cluster controller specific configuration.
clusterController:
  # Allows override of the global default image.
  image:

# Monitor specific configuration.
monitor:
  # Allows override of the global default image.
  image:

# REST server specific configuration.
server:
  # Allows override of the global default image.
  image:

  ingress:
    # Sets the ingress class to use.
    # class: nginx

    # Sets the DNS hosts/X.509 Certs.
    host: unikorn.unikorn-cloud.org

    # Cert Manager certificate issuer to use.  If not specified it will generate a
    # self signed one.
    issuer: ~

    # clusterIssuer to use.
    clusterIssuer: unikorn-issuer

    # If true, will add the external DNS hostname annotation.
    externalDns: false

  # Allows CORS to be configured/secured
  # cors:
  #   # Broswers must send requests from these origin servers, defaults to * if not set.
  #   allowOrigin: ['*']
  #   # How long to cache the CORS preflight for, mostly useless as browsers override this.
  #   maxAge: 86400

  identity:
    # OIDC issuer used to discover OIDC configuration and verify access tokens.
    host: https://identity.unikorn-cloud.org

    # CA certificate to use to verify connections to the issuer, used in development only.
    # caSecretNamespace: ~
    # caSecretName: ~

  region:
    # Region controller URL.
    host: https://region.unikorn-cloud.org

    # CA file if using self signed/private certificates.
    # caSecretNamespace: ~
    # caSecretName: ~

  # Sets the OTLP endpoint for shipping spans.
  # otlpEndpoint: jaeger-collector.default:4318

# Defines Prometheus monitoring integration.
monitoring:
  # Enable monitoring, ensure Prometheus is installed first to define the CRDs.
  enabled: false

  # Set the namespace to generate the service monitor into.
  namespace: monitoring

  # Define service monitor configuration.
  serviceMonitor:

    # Labels required to be selected by Prometheus, this is compatible with
    # kube-prometheus defaults.
    labels:
      release: prometheus

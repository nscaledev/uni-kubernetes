---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: kubernetesclusters.unikorn-cloud.org
spec:
  group: unikorn-cloud.org
  names:
    categories:
    - unikorn
    kind: KubernetesCluster
    listKind: KubernetesClusterList
    plural: kubernetesclusters
    singular: kubernetescluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.labels['unikorn-cloud\.org/name']
      name: display name
      type: string
    - jsonPath: .spec.applicationBundle
      name: bundle
      type: string
    - jsonPath: .spec.version
      name: version
      type: string
    - jsonPath: .status.conditions[?(@.type=="Available")].reason
      name: status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          KubernetesCluster is an object representing a Kubernetes cluster.
          For now, this is a monolith for simplicity.  In future it may reference
          a provider specific implementation e.g. if CAPI goes out of favour for
          some other new starlet.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KubernetesClusterSpec defines the requested state of the
              Kubernetes cluster.
            properties:
              api:
                description: API defines Kubernetes API specific options.
                properties:
                  allowedPrefixes:
                    description: |-
                      AllowedPrefixes is a list of all IPv4 prefixes that are allowed to access
                      the API.
                    items:
                      pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\/(?:3[0-2]|[1-2]?[0-9])$
                      type: string
                    type: array
                  subjectAlternativeNames:
                    description: |-
                      SubjectAlternativeNames is a list of X.509 SANs to add to the API
                      certificate.
                    items:
                      type: string
                    type: array
                type: object
              applicationBundle:
                description: |-
                  ApplicationBundle defines the applications used to create the cluster.
                  Change this to a new bundle to start an upgrade.
                type: string
              applicationBundleAutoUpgrade:
                description: |-
                  ApplicationBundleAutoUpgrade enables automatic upgrade of application bundles.
                  When no properties are set in the specification, the platform will automatically
                  choose an upgrade time for your resource.  This will be before a working day
                  (Mon-Fri) and before working hours (00:00-07:00 UTC).  When any property is set
                  the platform will follow the rules for the upgrade method.
                properties:
                  weekday:
                    description: |-
                      WeekDay allows specification of upgrade time windows on individual
                      days of the week.  The platform will select a random  upgrade
                      slot within the specified time windows in order to load balance and
                      mitigate against defects.
                    properties:
                      friday:
                        description: Friday, when specified, provides an upgrade window
                          on that day.
                        properties:
                          end:
                            description: End is the upgrade window end hour in UTC.
                            maximum: 23
                            minimum: 0
                            type: integer
                          start:
                            description: |-
                              Start is the upgrade window start hour in UTC.  Upgrades will be
                              deterministically scheduled between start and end to balance load
                              across the platform.  Windows can span days, so start=22 and end=07
                              will start at 22:00 on the selected day, and end 07:00 the following
                              one.
                            maximum: 23
                            minimum: 0
                            type: integer
                        required:
                        - end
                        - start
                        type: object
                      monday:
                        description: Monday, when specified, provides an upgrade window
                          on that day.
                        properties:
                          end:
                            description: End is the upgrade window end hour in UTC.
                            maximum: 23
                            minimum: 0
                            type: integer
                          start:
                            description: |-
                              Start is the upgrade window start hour in UTC.  Upgrades will be
                              deterministically scheduled between start and end to balance load
                              across the platform.  Windows can span days, so start=22 and end=07
                              will start at 22:00 on the selected day, and end 07:00 the following
                              one.
                            maximum: 23
                            minimum: 0
                            type: integer
                        required:
                        - end
                        - start
                        type: object
                      saturday:
                        description: Saturday, when specified, provides an upgrade
                          window on that day.
                        properties:
                          end:
                            description: End is the upgrade window end hour in UTC.
                            maximum: 23
                            minimum: 0
                            type: integer
                          start:
                            description: |-
                              Start is the upgrade window start hour in UTC.  Upgrades will be
                              deterministically scheduled between start and end to balance load
                              across the platform.  Windows can span days, so start=22 and end=07
                              will start at 22:00 on the selected day, and end 07:00 the following
                              one.
                            maximum: 23
                            minimum: 0
                            type: integer
                        required:
                        - end
                        - start
                        type: object
                      sunday:
                        description: Sunday, when specified, provides an upgrade window
                          on that day.
                        properties:
                          end:
                            description: End is the upgrade window end hour in UTC.
                            maximum: 23
                            minimum: 0
                            type: integer
                          start:
                            description: |-
                              Start is the upgrade window start hour in UTC.  Upgrades will be
                              deterministically scheduled between start and end to balance load
                              across the platform.  Windows can span days, so start=22 and end=07
                              will start at 22:00 on the selected day, and end 07:00 the following
                              one.
                            maximum: 23
                            minimum: 0
                            type: integer
                        required:
                        - end
                        - start
                        type: object
                      thursday:
                        description: Thursday, when specified, provides an upgrade
                          window on that day.
                        properties:
                          end:
                            description: End is the upgrade window end hour in UTC.
                            maximum: 23
                            minimum: 0
                            type: integer
                          start:
                            description: |-
                              Start is the upgrade window start hour in UTC.  Upgrades will be
                              deterministically scheduled between start and end to balance load
                              across the platform.  Windows can span days, so start=22 and end=07
                              will start at 22:00 on the selected day, and end 07:00 the following
                              one.
                            maximum: 23
                            minimum: 0
                            type: integer
                        required:
                        - end
                        - start
                        type: object
                      tuesday:
                        description: Tuesday, when specified, provides an upgrade
                          window on that day.
                        properties:
                          end:
                            description: End is the upgrade window end hour in UTC.
                            maximum: 23
                            minimum: 0
                            type: integer
                          start:
                            description: |-
                              Start is the upgrade window start hour in UTC.  Upgrades will be
                              deterministically scheduled between start and end to balance load
                              across the platform.  Windows can span days, so start=22 and end=07
                              will start at 22:00 on the selected day, and end 07:00 the following
                              one.
                            maximum: 23
                            minimum: 0
                            type: integer
                        required:
                        - end
                        - start
                        type: object
                      wednesday:
                        description: Wednesday, when specified, provides an upgrade
                          window on that day.
                        properties:
                          end:
                            description: End is the upgrade window end hour in UTC.
                            maximum: 23
                            minimum: 0
                            type: integer
                          start:
                            description: |-
                              Start is the upgrade window start hour in UTC.  Upgrades will be
                              deterministically scheduled between start and end to balance load
                              across the platform.  Windows can span days, so start=22 and end=07
                              will start at 22:00 on the selected day, and end 07:00 the following
                              one.
                            maximum: 23
                            minimum: 0
                            type: integer
                        required:
                        - end
                        - start
                        type: object
                    type: object
                type: object
              clusterManagerId:
                description: ClusterManager that provides lifecycle management for
                  the cluster.
                type: string
              controlPlane:
                description: ControlPlane defines the cluster manager topology.
                properties:
                  diskSize:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      DiskSize is the persistent root disk size to deploy with.  This
                      overrides the default ephemeral disk size defined in the flavor.
                      This is irrelevant for baremetal machine flavors.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  flavorId:
                    description: Flavor is the regions service flavor to deploy with.
                    type: string
                  imageId:
                    description: Image is the region service image to deploy with.
                    type: string
                  replicas:
                    default: 3
                    description: Replicas is the initial pool size to deploy.
                    minimum: 0
                    type: integer
                required:
                - flavorId
                - imageId
                type: object
              features:
                description: Features defines add-on features that can be enabled
                  for the cluster.
                properties:
                  autoscaling:
                    description: |-
                      Autoscaling enables the provision of a cluster autoscaler.
                      This is only installed if a workload pool has autoscaling enabled.
                    type: boolean
                  gpuOperator:
                    description: |-
                      GPUOperator enables the provision of a GPU operator.
                      This is only installed if a workload pool has a flavor that defines
                      a valid GPU specification and vendor.
                    type: boolean
                type: object
              network:
                description: Network defines the Kubernetes networking.
                properties:
                  dnsNameservers:
                    description: DNSNameservers sets the DNS nameservers for hosts
                      on the network.
                    items:
                      pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])$
                      type: string
                    minItems: 1
                    type: array
                    x-kubernetes-list-type: set
                  nodeNetwork:
                    description: |-
                      NodeNetwork is the IPv4 prefix for the node network.
                      This is tyically used to populate a physical network address range.
                    pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\/(?:3[0-2]|[1-2]?[0-9])$
                    type: string
                  podNetwork:
                    description: PodNetwork is the IPv4 prefix for the pod network.
                    pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\/(?:3[0-2]|[1-2]?[0-9])$
                    type: string
                  serviceNetwork:
                    description: ServiceNetwork is the IPv4 prefix for the service
                      network.
                    pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\/(?:3[0-2]|[1-2]?[0-9])$
                    type: string
                required:
                - dnsNameservers
                - nodeNetwork
                - podNetwork
                - serviceNetwork
                type: object
              pause:
                description: Pause, if true, will inhibit reconciliation.
                type: boolean
              regionId:
                description: Region to provision the cluster in.
                type: string
              version:
                description: |-
                  Version is the Kubernetes version to install.  For performance
                  reasons this should match what is already pre-installed on the
                  provided image.
                pattern: ^v?[0-9]+(\.[0-9]+)?(\.[0-9]+)?(-([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?(\+([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?$
                type: string
              workloadPools:
                description: WorkloadPools defines the workload cluster topology.
                properties:
                  pools:
                    description: |-
                      Pools contains an inline set of pools.  This field will be ignored
                      when Selector is set.  Inline pools are expected to be used for UI
                      generated clusters.
                    items:
                      properties:
                        autoscaling:
                          description: |-
                            Autoscaling contains optional sclaing limits and scheduling
                            hints for autoscaling.
                          properties:
                            maximumReplicas:
                              description: |-
                                MaximumReplicas defines the maximum numer of replicas that
                                this pool can be scaled up to.
                              minimum: 1
                              type: integer
                            minimumReplicas:
                              description: |-
                                MinimumReplicas defines the minimum number of replicas that
                                this pool can be scaled down to.
                              minimum: 0
                              type: integer
                          required:
                          - maximumReplicas
                          - minimumReplicas
                          type: object
                          x-kubernetes-validations:
                          - message: maximumReplicas must be greater than minimumReplicas
                            rule: (self.maximumReplicas > self.minimumReplicas)
                        diskSize:
                          anyOf:
                          - type: integer
                          - type: string
                          description: |-
                            DiskSize is the persistent root disk size to deploy with.  This
                            overrides the default ephemeral disk size defined in the flavor.
                            This is irrelevant for baremetal machine flavors.
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        files:
                          description: |-
                            Files are a set of files that can be installed onto the node
                            on initialisation/join.
                          items:
                            description: File is a file that can be deployed to a
                              cluster node on creation.
                            properties:
                              content:
                                description: Content is the file contents.
                                format: byte
                                type: string
                              path:
                                description: Path is the absolute path to create the
                                  file in.
                                type: string
                            required:
                            - content
                            - path
                            type: object
                          type: array
                        flavorId:
                          description: Flavor is the regions service flavor to deploy
                            with.
                          type: string
                        imageId:
                          description: Image is the region service image to deploy
                            with.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            Labels is the set of node labels to apply to the pool on
                            initialisation/join.
                          type: object
                        name:
                          description: Name is the name of the pool.
                          type: string
                        replicas:
                          default: 3
                          description: Replicas is the initial pool size to deploy.
                          minimum: 0
                          type: integer
                      required:
                      - flavorId
                      - imageId
                      - name
                      type: object
                    type: array
                type: object
            required:
            - applicationBundle
            - clusterManagerId
            - controlPlane
            - network
            - regionId
            - version
            - workloadPools
            type: object
          status:
            description: KubernetesClusterStatus defines the observed state of the
              Kubernetes cluster.
            properties:
              conditions:
                description: Current service state of a Kubernetes cluster.
                items:
                  description: |-
                    Condition is a generic condition type for use across all resource types.
                    It's generic so that the underlying controller-manager functionality can
                    be shared across all resources.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      enum:
                      - Provisioning
                      - Provisioned
                      - Cancelled
                      - Errored
                      - Deprovisioning
                      - Deprovisioned
                      type: string
                    status:
                      description: |-
                        Status is the status of the condition.
                        Can be True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      enum:
                      - Available
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              namespace:
                description: Namespace defines the namespace a cluster resides in.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

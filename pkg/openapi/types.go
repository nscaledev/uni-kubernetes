// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package openapi

import (
	externalRef0 "github.com/unikorn-cloud/core/pkg/openapi"
)

const (
	Oauth2AuthenticationScopes = "oauth2Authentication.Scopes"
)

// ApplicationDependencies A set of applications that will be installed before this application.
type ApplicationDependencies = []ApplicationDependency

// ApplicationDependency An application dependency.
type ApplicationDependency struct {
	// Name The application name.
	Name string `json:"name"`
}

// ApplicationRead defines model for applicationRead.
type ApplicationRead struct {
	// Metadata Resource metadata valid for all reads.
	Metadata externalRef0.ResourceReadMetadata `json:"metadata"`

	// Spec An application.
	Spec ApplicationSpec `json:"spec"`
}

// ApplicationRecommends A set of recommended application that may be installed after this application.
type ApplicationRecommends = []ApplicationDependency

// ApplicationSpec An application.
type ApplicationSpec struct {
	// Documentation Documentation link for the application.
	Documentation string `json:"documentation"`

	// HumanReadableName Human readable application name.
	HumanReadableName string `json:"humanReadableName"`

	// Icon A base64 encoded SVG icon.  This should work in both light and dark themes.
	Icon []byte `json:"icon"`

	// License The license under which the application is released.
	License string `json:"license"`

	// Tags A set of tags for filtering applications.
	Tags *ApplicationTags `json:"tags,omitempty"`

	// Versions A set of application versions.
	Versions ApplicationVersions `json:"versions"`
}

// ApplicationTags A set of tags for filtering applications.
type ApplicationTags = []string

// ApplicationVersion An application version.
type ApplicationVersion struct {
	// Dependencies A set of applications that will be installed before this application.
	Dependencies *ApplicationDependencies `json:"dependencies,omitempty"`

	// Recommends A set of recommended application that may be installed after this application.
	Recommends *ApplicationRecommends `json:"recommends,omitempty"`

	// Version The application's Helm chart version.
	Version string `json:"version"`
}

// ApplicationVersions A set of application versions.
type ApplicationVersions = []ApplicationVersion

// Applications A list of appications.
type Applications = []ApplicationRead

// ClusterManagerRead A cluster manager.
type ClusterManagerRead struct {
	Metadata externalRef0.ProjectScopedResourceReadMetadata `json:"metadata"`
}

// ClusterManagerWrite A cluster manager.
type ClusterManagerWrite struct {
	// Metadata Resource metadata valid for all API resource reads and writes.
	Metadata externalRef0.ResourceWriteMetadata `json:"metadata"`
}

// ClusterManagers A list of cluster managers.
type ClusterManagers = []ClusterManagerRead

// KubernetesClusterAutoscaling A Kubernetes cluster workload pool autoscaling configuration. Cluster autoscaling
// must also be enabled in the cluster features.
type KubernetesClusterAutoscaling struct {
	// MinimumReplicas The minimum number of replicas to allow. Must be less than the maximum.
	MinimumReplicas int `json:"minimumReplicas"`
}

// KubernetesClusterRead Kubernetes cluster read.
type KubernetesClusterRead struct {
	Metadata externalRef0.ProjectScopedResourceReadMetadata `json:"metadata"`

	// Spec Kubernetes cluster creation parameters.
	Spec KubernetesClusterSpec `json:"spec"`
}

// KubernetesClusterSpec Kubernetes cluster creation parameters.
type KubernetesClusterSpec struct {
	// ClusterManagerId The name of the cluster manager to use, if one is not specified
	// the system will create one for you.
	ClusterManagerId *string `json:"clusterManagerId,omitempty"`

	// RegionId The region to provision the cluster in.
	RegionId string `json:"regionId"`

	// Version The Kuebernetes version.  This should be derived from image metadata.
	Version string `json:"version"`

	// WorkloadPools A list of Kubernetes cluster workload pools.
	WorkloadPools KubernetesClusterWorkloadPools `json:"workloadPools"`
}

// KubernetesClusterWorkloadPool A Kuberntes cluster workload pool.
type KubernetesClusterWorkloadPool struct {
	// Autoscaling A Kubernetes cluster workload pool autoscaling configuration. Cluster autoscaling
	// must also be enabled in the cluster features.
	Autoscaling *KubernetesClusterAutoscaling `json:"autoscaling,omitempty"`

	// Labels Workload pool key value labels to apply on node creation.
	Labels *map[string]string `json:"labels,omitempty"`

	// Machine A Kubernetes cluster machine.
	Machine MachinePool `json:"machine"`

	// Name Workload pool name.
	Name string `json:"name"`
}

// KubernetesClusterWorkloadPools A list of Kubernetes cluster workload pools.
type KubernetesClusterWorkloadPools = []KubernetesClusterWorkloadPool

// KubernetesClusterWrite Kubernetes cluster create or update.
type KubernetesClusterWrite struct {
	// Metadata Resource metadata valid for all API resource reads and writes.
	Metadata externalRef0.ResourceWriteMetadata `json:"metadata"`

	// Spec Kubernetes cluster creation parameters.
	Spec KubernetesClusterSpec `json:"spec"`
}

// KubernetesClusters A list of Kubernetes clusters.
type KubernetesClusters = []KubernetesClusterRead

// KubernetesNameParameter A Kubernetes name. Must be a valid DNS containing only lower case characters, numbers or hyphens, start and end with a character or number, and be at most 63 characters in length.
type KubernetesNameParameter = string

// MachinePool A Kubernetes cluster machine.
type MachinePool struct {
	// Disk A volume.
	Disk *Volume `json:"disk,omitempty"`

	// FlavorId Flavor ID.
	FlavorId *string `json:"flavorId,omitempty"`

	// Replicas Number of machines for a statically sized pool or the maximum for an auto-scaled pool.
	Replicas *int `json:"replicas,omitempty"`
}

// Volume A volume.
type Volume struct {
	// Size Disk size in GiB.
	Size int `json:"size"`
}

// ClusterIDParameter A Kubernetes name. Must be a valid DNS containing only lower case characters, numbers or hyphens, start and end with a character or number, and be at most 63 characters in length.
type ClusterIDParameter = KubernetesNameParameter

// ClusterManagerIDParameter A Kubernetes name. Must be a valid DNS containing only lower case characters, numbers or hyphens, start and end with a character or number, and be at most 63 characters in length.
type ClusterManagerIDParameter = KubernetesNameParameter

// OrganizationIDParameter A Kubernetes name. Must be a valid DNS containing only lower case characters, numbers or hyphens, start and end with a character or number, and be at most 63 characters in length.
type OrganizationIDParameter = KubernetesNameParameter

// ProjectIDParameter A Kubernetes name. Must be a valid DNS containing only lower case characters, numbers or hyphens, start and end with a character or number, and be at most 63 characters in length.
type ProjectIDParameter = KubernetesNameParameter

// ApplicationResponse A list of appications.
type ApplicationResponse = Applications

// ClusterManagerResponse A cluster manager.
type ClusterManagerResponse = ClusterManagerRead

// ClusterManagersResponse A list of cluster managers.
type ClusterManagersResponse = ClusterManagers

// KubernetesClusterResponse Kubernetes cluster read.
type KubernetesClusterResponse = KubernetesClusterRead

// KubernetesClustersResponse A list of Kubernetes clusters.
type KubernetesClustersResponse = KubernetesClusters

// CreateControlPlaneRequest A cluster manager.
type CreateControlPlaneRequest = ClusterManagerWrite

// CreateKubernetesClusterRequest Kubernetes cluster create or update.
type CreateKubernetesClusterRequest = KubernetesClusterWrite

// PostApiV1OrganizationsOrganizationIDProjectsProjectIDClustermanagersJSONRequestBody defines body for PostApiV1OrganizationsOrganizationIDProjectsProjectIDClustermanagers for application/json ContentType.
type PostApiV1OrganizationsOrganizationIDProjectsProjectIDClustermanagersJSONRequestBody = ClusterManagerWrite

// PutApiV1OrganizationsOrganizationIDProjectsProjectIDClustermanagersClusterManagerIDJSONRequestBody defines body for PutApiV1OrganizationsOrganizationIDProjectsProjectIDClustermanagersClusterManagerID for application/json ContentType.
type PutApiV1OrganizationsOrganizationIDProjectsProjectIDClustermanagersClusterManagerIDJSONRequestBody = ClusterManagerWrite

// PostApiV1OrganizationsOrganizationIDProjectsProjectIDClustersJSONRequestBody defines body for PostApiV1OrganizationsOrganizationIDProjectsProjectIDClusters for application/json ContentType.
type PostApiV1OrganizationsOrganizationIDProjectsProjectIDClustersJSONRequestBody = KubernetesClusterWrite

// PutApiV1OrganizationsOrganizationIDProjectsProjectIDClustersClusterIDJSONRequestBody defines body for PutApiV1OrganizationsOrganizationIDProjectsProjectIDClustersClusterID for application/json ContentType.
type PutApiV1OrganizationsOrganizationIDProjectsProjectIDClustersClusterIDJSONRequestBody = KubernetesClusterWrite

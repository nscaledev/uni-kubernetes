// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	externalRef0 "github.com/unikorn-cloud/core/pkg/openapi"
)

const (
	Oauth2AuthenticationScopes = "oauth2Authentication.Scopes"
)

// Defines values for RegionTypeParameter.
const (
	Physical RegionTypeParameter = "physical"
	Virtual  RegionTypeParameter = "virtual"
)

// ClusterManagerRead A cluster manager.
type ClusterManagerRead struct {
	// Metadata Metadata required by project scoped resource reads.
	Metadata externalRef0.ProjectScopedResourceReadMetadata `json:"metadata"`
}

// ClusterManagerWrite A cluster manager.
type ClusterManagerWrite struct {
	// Metadata Metadata required for all API resource reads and writes.
	Metadata externalRef0.ResourceWriteMetadata `json:"metadata"`
}

// ClusterManagers A list of cluster managers.
type ClusterManagers = []ClusterManagerRead

// KubernetesClusterAPI Kubernetes API settings.
type KubernetesClusterAPI struct {
	// AllowedPrefixes Set of address prefixes to allow access to the Kubernetes API.
	AllowedPrefixes *[]string `json:"allowedPrefixes,omitempty"`

	// SubjectAlternativeNames Set of non-standard X.509 SANs to add to the API certificate.
	SubjectAlternativeNames *[]string `json:"subjectAlternativeNames,omitempty"`
}

// KubernetesClusterAutoUpgrade If set, enables auto-upgrade to a set schedule, or if not set, opts
// out of upgrades entirely.  Upgrades still occur when the cluster's
// application bundle reaches end of life irrespective of whether auto upgrades
// are disabled. The absence of this object represents a default auto-upgrade policy of
// the platform.
type KubernetesClusterAutoUpgrade struct {
	// DaysOfWeek When defined allows explicit control of what days an auto upgrade can
	// occur on.
	DaysOfWeek *KubernetesClusterAutoUpgradeDaysOfWeek `json:"daysOfWeek,omitempty"`

	// Enabled Whether or not auto upgrades are enabled.
	Enabled bool `json:"enabled"`
}

// KubernetesClusterAutoUpgradeDaysOfWeek When defined allows explicit control of what days an auto upgrade can
// occur on.
type KubernetesClusterAutoUpgradeDaysOfWeek struct {
	// Friday Defines when in the day an upgrade is allowed to occur, specified as an
	// hour starting from 0 up to 23.  Upgrade windows can overflow into the next
	// day e.g. a start of 22 will begin upgrades from 10pm, and an end of 6 will
	// stop upgrades after 6am.
	Friday *KubernetesClusterAutoUpgradeWindow `json:"friday,omitempty"`

	// Monday Defines when in the day an upgrade is allowed to occur, specified as an
	// hour starting from 0 up to 23.  Upgrade windows can overflow into the next
	// day e.g. a start of 22 will begin upgrades from 10pm, and an end of 6 will
	// stop upgrades after 6am.
	Monday *KubernetesClusterAutoUpgradeWindow `json:"monday,omitempty"`

	// Saturday Defines when in the day an upgrade is allowed to occur, specified as an
	// hour starting from 0 up to 23.  Upgrade windows can overflow into the next
	// day e.g. a start of 22 will begin upgrades from 10pm, and an end of 6 will
	// stop upgrades after 6am.
	Saturday *KubernetesClusterAutoUpgradeWindow `json:"saturday,omitempty"`

	// Sunday Defines when in the day an upgrade is allowed to occur, specified as an
	// hour starting from 0 up to 23.  Upgrade windows can overflow into the next
	// day e.g. a start of 22 will begin upgrades from 10pm, and an end of 6 will
	// stop upgrades after 6am.
	Sunday *KubernetesClusterAutoUpgradeWindow `json:"sunday,omitempty"`

	// Thursday Defines when in the day an upgrade is allowed to occur, specified as an
	// hour starting from 0 up to 23.  Upgrade windows can overflow into the next
	// day e.g. a start of 22 will begin upgrades from 10pm, and an end of 6 will
	// stop upgrades after 6am.
	Thursday *KubernetesClusterAutoUpgradeWindow `json:"thursday,omitempty"`

	// Tuesday Defines when in the day an upgrade is allowed to occur, specified as an
	// hour starting from 0 up to 23.  Upgrade windows can overflow into the next
	// day e.g. a start of 22 will begin upgrades from 10pm, and an end of 6 will
	// stop upgrades after 6am.
	Tuesday *KubernetesClusterAutoUpgradeWindow `json:"tuesday,omitempty"`

	// Wednesday Defines when in the day an upgrade is allowed to occur, specified as an
	// hour starting from 0 up to 23.  Upgrade windows can overflow into the next
	// day e.g. a start of 22 will begin upgrades from 10pm, and an end of 6 will
	// stop upgrades after 6am.
	Wednesday *KubernetesClusterAutoUpgradeWindow `json:"wednesday,omitempty"`
}

// KubernetesClusterAutoUpgradeWindow Defines when in the day an upgrade is allowed to occur, specified as an
// hour starting from 0 up to 23.  Upgrade windows can overflow into the next
// day e.g. a start of 22 will begin upgrades from 10pm, and an end of 6 will
// stop upgrades after 6am.
type KubernetesClusterAutoUpgradeWindow struct {
	// End Hour to end upgrades.
	End int `json:"end"`

	// Start Hour to start upgrades.
	Start int `json:"start"`
}

// KubernetesClusterAutoscaling A Kubernetes cluster workload pool autoscaling configuration. Cluster autoscaling
// must also be enabled in the cluster features.
type KubernetesClusterAutoscaling struct {
	// MinimumReplicas The minimum number of replicas to allow. Must be less than the maximum.
	MinimumReplicas int `json:"minimumReplicas"`
}

// KubernetesClusterNetwork A Kubernetes cluster network settings.
type KubernetesClusterNetwork struct {
	// DnsNameservers A list of DNS name server to use.
	DnsNameservers *[]string `json:"dnsNameservers,omitempty"`

	// NodePrefix Network prefix to provision nodes in. Must be a valid CIDR block.
	NodePrefix *string `json:"nodePrefix,omitempty"`

	// PodPrefix Network prefix to provision pods in. Must be a valid CIDR block.
	PodPrefix *string `json:"podPrefix,omitempty"`

	// ServicePrefix Network prefix to provision services in. Must be a valid CIDR block.
	ServicePrefix *string `json:"servicePrefix,omitempty"`
}

// KubernetesClusterRead Kubernetes cluster read.
type KubernetesClusterRead struct {
	// Metadata Metadata required by project scoped resource reads.
	Metadata externalRef0.ProjectScopedResourceReadMetadata `json:"metadata"`

	// Spec Kubernetes cluster creation parameters.
	Spec KubernetesClusterSpec `json:"spec"`
}

// KubernetesClusterSpec Kubernetes cluster creation parameters.
type KubernetesClusterSpec struct {
	// Api Kubernetes API settings.
	Api *KubernetesClusterAPI `json:"api,omitempty"`

	// ApplicationBundleName An explicit set of applications to use for deploy.
	ApplicationBundleName *string `json:"applicationBundleName,omitempty"`

	// AutoUpgrade If set, enables auto-upgrade to a set schedule, or if not set, opts
	// out of upgrades entirely.  Upgrades still occur when the cluster's
	// application bundle reaches end of life irrespective of whether auto upgrades
	// are disabled. The absence of this object represents a default auto-upgrade policy of
	// the platform.
	AutoUpgrade *KubernetesClusterAutoUpgrade `json:"autoUpgrade,omitempty"`

	// ClusterManagerId The name of the cluster manager to use, if one is not specified
	// the system will create one for you.
	ClusterManagerId *string `json:"clusterManagerId,omitempty"`

	// Networking A Kubernetes cluster network settings.
	Networking *KubernetesClusterNetwork `json:"networking,omitempty"`

	// RegionId The region to provision the cluster in.
	RegionId string `json:"regionId"`

	// Version The Kubernetes version.  This should be derived from image metadata.
	Version string `json:"version"`

	// WorkloadPools A list of Kubernetes cluster workload pools.
	WorkloadPools KubernetesClusterWorkloadPools `json:"workloadPools"`
}

// KubernetesClusterWorkloadPool A Kubernetes cluster workload pool.
type KubernetesClusterWorkloadPool struct {
	// Autoscaling A Kubernetes cluster workload pool autoscaling configuration. Cluster autoscaling
	// must also be enabled in the cluster features.
	Autoscaling *KubernetesClusterAutoscaling `json:"autoscaling,omitempty"`

	// Labels Workload pool key value labels to apply on node creation.
	Labels *map[string]string `json:"labels,omitempty"`

	// Machine A Kubernetes cluster machine.
	Machine MachinePool `json:"machine"`

	// Name Workload pool name.
	Name string `json:"name"`
}

// KubernetesClusterWorkloadPools A list of Kubernetes cluster workload pools.
type KubernetesClusterWorkloadPools = []KubernetesClusterWorkloadPool

// KubernetesClusterWrite Kubernetes cluster create or update.
type KubernetesClusterWrite struct {
	// Metadata Metadata required for all API resource reads and writes.
	Metadata externalRef0.ResourceWriteMetadata `json:"metadata"`

	// Spec Kubernetes cluster creation parameters.
	Spec KubernetesClusterSpec `json:"spec"`
}

// KubernetesClusters A list of Kubernetes clusters.
type KubernetesClusters = []KubernetesClusterRead

// KubernetesNameParameter A Kubernetes name. Must be a valid DNS containing only lower case characters, numbers or hyphens, start and end with a character or number, and be at most 63 characters in length.
type KubernetesNameParameter = string

// MachinePool A Kubernetes cluster machine.
type MachinePool struct {
	// Disk A volume.
	Disk *Volume `json:"disk,omitempty"`

	// FlavorId Flavor ID.
	FlavorId *string `json:"flavorId,omitempty"`

	// Replicas Number of machines for a statically sized pool or the maximum for an auto-scaled pool.
	Replicas *int `json:"replicas,omitempty"`
}

// RegionTypeParameter The region type. "physical" means a full Kubernetes cluster deployment, "virtual" is a virtual
// Kubernetes cluster hosted by another one.
type RegionTypeParameter string

// VirtualKubernetesClusterRead Virtual Kubernetes cluster read.
type VirtualKubernetesClusterRead struct {
	// Metadata Metadata required by project scoped resource reads.
	Metadata externalRef0.ProjectScopedResourceReadMetadata `json:"metadata"`

	// Spec Virtual Kubernetes cluster creation parameters.
	Spec VirtualKubernetesClusterSpec `json:"spec"`
}

// VirtualKubernetesClusterSpec Virtual Kubernetes cluster creation parameters.
type VirtualKubernetesClusterSpec struct {
	// RegionId The region to provision the cluster in.
	RegionId string `json:"regionId"`

	// WorkloadPools A set of virtual workload pools.
	WorkloadPools VirtualKubernetesClusterWorkloadPools `json:"workloadPools"`
}

// VirtualKubernetesClusterWorkloadPool A virtual workload pool.
type VirtualKubernetesClusterWorkloadPool struct {
	// FlavorId The flavor's ID
	FlavorId string `json:"flavorId"`

	// Name The workload pool name.
	Name string `json:"name"`

	// Replicas The number of nodes.
	Replicas int `json:"replicas"`
}

// VirtualKubernetesClusterWorkloadPools A set of virtual workload pools.
type VirtualKubernetesClusterWorkloadPools = []VirtualKubernetesClusterWorkloadPool

// VirtualKubernetesClusterWrite Virtual Kubernetes cluster create or update.
type VirtualKubernetesClusterWrite struct {
	// Metadata Metadata required for all API resource reads and writes.
	Metadata externalRef0.ResourceWriteMetadata `json:"metadata"`

	// Spec Virtual Kubernetes cluster creation parameters.
	Spec VirtualKubernetesClusterSpec `json:"spec"`
}

// VirtualKubernetesClusters A list of virtual Kubernetes clusters.
type VirtualKubernetesClusters = []VirtualKubernetesClusterRead

// Volume A volume.
type Volume struct {
	// Size Disk size in GiB.
	Size int `json:"size"`
}

// ClusterIDParameter A Kubernetes name. Must be a valid DNS containing only lower case characters, numbers or hyphens, start and end with a character or number, and be at most 63 characters in length.
type ClusterIDParameter = KubernetesNameParameter

// ClusterManagerIDParameter A Kubernetes name. Must be a valid DNS containing only lower case characters, numbers or hyphens, start and end with a character or number, and be at most 63 characters in length.
type ClusterManagerIDParameter = KubernetesNameParameter

// OrganizationIDParameter A Kubernetes name. Must be a valid DNS containing only lower case characters, numbers or hyphens, start and end with a character or number, and be at most 63 characters in length.
type OrganizationIDParameter = KubernetesNameParameter

// ProjectIDParameter A Kubernetes name. Must be a valid DNS containing only lower case characters, numbers or hyphens, start and end with a character or number, and be at most 63 characters in length.
type ProjectIDParameter = KubernetesNameParameter

// RegionIDParameter A Kubernetes name. Must be a valid DNS containing only lower case characters, numbers or hyphens, start and end with a character or number, and be at most 63 characters in length.
type RegionIDParameter = KubernetesNameParameter

// ClusterManagerResponse A cluster manager.
type ClusterManagerResponse = ClusterManagerRead

// ClusterManagersResponse A list of cluster managers.
type ClusterManagersResponse = ClusterManagers

// KubernetesClusterResponse Kubernetes cluster read.
type KubernetesClusterResponse = KubernetesClusterRead

// KubernetesClustersResponse A list of Kubernetes clusters.
type KubernetesClustersResponse = KubernetesClusters

// VirtualKubernetesClusterResponse Virtual Kubernetes cluster read.
type VirtualKubernetesClusterResponse = VirtualKubernetesClusterRead

// VirtualKubernetesClustersResponse A list of virtual Kubernetes clusters.
type VirtualKubernetesClustersResponse = VirtualKubernetesClusters

// CreateControlPlaneRequest A cluster manager.
type CreateControlPlaneRequest = ClusterManagerWrite

// CreateKubernetesClusterRequest Kubernetes cluster create or update.
type CreateKubernetesClusterRequest = KubernetesClusterWrite

// CreateVirtualKubernetesClusterRequest Virtual Kubernetes cluster create or update.
type CreateVirtualKubernetesClusterRequest = VirtualKubernetesClusterWrite

// GetApiV1OrganizationsOrganizationIDRegionsParams defines parameters for GetApiV1OrganizationsOrganizationIDRegions.
type GetApiV1OrganizationsOrganizationIDRegionsParams struct {
	// RegionType The type of region we are asking for.
	RegionType RegionTypeParameter `form:"regionType" json:"regionType"`
}

// PostApiV1OrganizationsOrganizationIDProjectsProjectIDClustermanagersJSONRequestBody defines body for PostApiV1OrganizationsOrganizationIDProjectsProjectIDClustermanagers for application/json ContentType.
type PostApiV1OrganizationsOrganizationIDProjectsProjectIDClustermanagersJSONRequestBody = ClusterManagerWrite

// PutApiV1OrganizationsOrganizationIDProjectsProjectIDClustermanagersClusterManagerIDJSONRequestBody defines body for PutApiV1OrganizationsOrganizationIDProjectsProjectIDClustermanagersClusterManagerID for application/json ContentType.
type PutApiV1OrganizationsOrganizationIDProjectsProjectIDClustermanagersClusterManagerIDJSONRequestBody = ClusterManagerWrite

// PostApiV1OrganizationsOrganizationIDProjectsProjectIDClustersJSONRequestBody defines body for PostApiV1OrganizationsOrganizationIDProjectsProjectIDClusters for application/json ContentType.
type PostApiV1OrganizationsOrganizationIDProjectsProjectIDClustersJSONRequestBody = KubernetesClusterWrite

// PutApiV1OrganizationsOrganizationIDProjectsProjectIDClustersClusterIDJSONRequestBody defines body for PutApiV1OrganizationsOrganizationIDProjectsProjectIDClustersClusterID for application/json ContentType.
type PutApiV1OrganizationsOrganizationIDProjectsProjectIDClustersClusterIDJSONRequestBody = KubernetesClusterWrite

// PostApiV1OrganizationsOrganizationIDProjectsProjectIDVirtualclustersJSONRequestBody defines body for PostApiV1OrganizationsOrganizationIDProjectsProjectIDVirtualclusters for application/json ContentType.
type PostApiV1OrganizationsOrganizationIDProjectsProjectIDVirtualclustersJSONRequestBody = VirtualKubernetesClusterWrite

// PutApiV1OrganizationsOrganizationIDProjectsProjectIDVirtualclustersClusterIDJSONRequestBody defines body for PutApiV1OrganizationsOrganizationIDProjectsProjectIDVirtualclustersClusterID for application/json ContentType.
type PutApiV1OrganizationsOrganizationIDProjectsProjectIDVirtualclustersClusterIDJSONRequestBody = VirtualKubernetesClusterWrite

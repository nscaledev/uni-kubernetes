openapi: 3.0.3
info:
  title: Kubernetes Service API
  description: |-
    The Kubernetes Service API provides services that allows provisioning and life cycle
    management of Kubernetes clusters. The API is logically composed of authentication
    services, platform provider specific calls to get a set of resource types that can
    be then used by abstract Kubernetes Service resources to create and manage Kubernetes
    clusters. Requests must specify the HTML content type
    header.
  version: 0.2.0
# This allows the documentation engine to combine API endpoints into related groups
# and also defines the order of appearance.
x-documentation-groups:
- id: main
  name: Core API
  description: |-
    The core API allows the management of core resources. Conceptually there are projects
    that are implicitly referenced by a scoped token issued during authentication.  Within
    a project are a number of cluster managers. In the context of the Kubernetes Service, a
    cluster manager is a management layer that provides multi-tenant isolation, and Kubernetes
    cluster provisioning and scaling services. Kubernetes clusters are provisioned within
    a cluster manager. Provisioning of projects and cluster managers may be done explicitly or
    implicitly, however this latter approach is less flexible as the Kubernetes Service will
    have to choose some default values for you, however it provides a faster and better
    user experience.
paths:
  /api/v1/organizations/{organizationID}/clustermanagers:
    x-documentation-group: main
    description: |-
      Implements cluster manager management services. Control planes manage the
      life cycle of Kubernetes clusters, through provisioning, upgrading, to deletion.
      Control planes must reference a versioned application bundle that defines the
      software versions of cluster manager components, and forms the basis of automatic
      upgrade functionality.  Referencing an explicit cluster manager name will
      implicitly create the associated project.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    get:
      description: |-
        Lists cluster managers within the organization.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/clusterManagersResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/projects/{projectID}/clustermanagers:
    description: |-
      Implements cluster manager management services. Control planes manage the
      life cycle of Kubernetes clusters, through provisioning, upgrading, to deletion.
      Control planes must reference a versioned application bundle that defines the
      software versions of cluster manager components, and forms the basis of automatic
      upgrade functionality.  Referencing an explicit cluster manager name will
      implicitly create the associated project.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/projectIDParameter'
    post:
      description: |-
        Creates a new cluster manager within the project.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/createControlPlaneRequest'
      responses:
        '202':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/acceptedResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '409':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/conflictResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/projects/{projectID}/clustermanagers/{clusterManagerID}:
    x-documentation-group: main
    description: |-
      Implements cluster manager management services. Control planes manage the
      life cycle of Kubernetes clusters, through provisioning, upgrading, to deletion.
      Control planes must reference a versioned application bundle that defines the
      software versions of cluster manager components, and forms the basis of automatic
      upgrade functionality.  Referencing an explicit cluster manager name will
      implicitly create the associated project.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/projectIDParameter'
    - $ref: '#/components/parameters/clusterManagerIDParameter'
    put:
      description: |-
        Updates a cluster manager within the scoped project.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/createControlPlaneRequest'
      responses:
        '202':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/acceptedResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    delete:
      description: |-
        Deletes a cluster manager from within the scoped project.
        This is a cascading operation and will delete all contained clusters.
      security:
      - oauth2Authentication: []
      responses:
        '202':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/acceptedResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/clusters:
    x-documentation-group: main
    description: Cluster services.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    get:
      description: |-
        List all clusters within the organization.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/kubernetesClustersResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/projects/{projectID}/clusters:
    x-documentation-group: main
    description: Cluster services.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/projectIDParameter'
    post:
      description: |-
        Creates a new cluster within the selected cluster manager.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/createKubernetesClusterRequest'
      responses:
        '202':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/acceptedResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '409':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/conflictResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/projects/{projectID}/clusters/{clusterID}:
    x-documentation-group: main
    description: Cluster services.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/projectIDParameter'
    - $ref: '#/components/parameters/clusterIDParameter'
    put:
      description: |-
        Update a cluster within the selected cluster manager.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/createKubernetesClusterRequest'
      responses:
        '202':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/acceptedResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    delete:
      description: |-
        Delete a cluster from within a the selected cluster manager.
      security:
      - oauth2Authentication: []
      responses:
        '202':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/acceptedResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/projects/{projectID}/clusters/{clusterID}/kubeconfig:
    x-documentation-group: main
    description: Cluster services.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/projectIDParameter'
    - $ref: '#/components/parameters/clusterIDParameter'
    get:
      description: |-
        Get a cluster's Kubernetes configuration.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/kubernetesClusterKubeconfigResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/applications:
    x-documentation-group: main
    description: Cluster application services.
    get:
      description: |-
        Lists applications available to be installed on clusters.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/applicationResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/regions:
    description: |-
      Regions define a cloud.  This may be geographical or any logical partition.
      Either way this is the primitive that is used to associate metadata such as
      geographical locale, an organisation's reserved blob of compute etc.
      Each region has its own provider associated with it, for example OpenStack, and
      its own set of credentials so things can be scoped to a specific slice of a
      shared cloud through whatever mechanism is available on that cloud provider.
    get:
      description: |-
        List all regions.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/regionsResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/regions/{regionID}/flavors:
    description: Compute flavor services.
    parameters:
    - $ref: '#/components/parameters/regionIDParameter'
    get:
      description: |-
        Lists all compute flavors that the authenticated user has access to
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/flavorsResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/regions/{regionID}/images:
    description: Compute image services.
    parameters:
    - $ref: '#/components/parameters/regionIDParameter'
    get:
      description: |-
        Lists all compute images that the authenticated user has access to.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/imagesResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
components:
  parameters:
    organizationIDParameter:
      name: organizationID
      in: path
      description: |-
        The organization name.
      required: true
      schema:
        $ref: '#/components/schemas/kubernetesNameParameter'
    projectIDParameter:
      name: projectID
      in: path
      description: |-
        The project name.
      required: true
      schema:
        $ref: '#/components/schemas/kubernetesNameParameter'
    clusterManagerIDParameter:
      name: clusterManagerID
      in: path
      description: |-
        The cluster manager name, if the cluster manager does not exist, then it may be
        implicitly created, for example a cluster is created against a cluster manager
        that does not exist. Must be a valid DNS containing only lower case characters,
        numbers or hyphens, start and end with a character or number, and be at most
        63 characters in length.
      required: true
      schema:
        $ref: '#/components/schemas/kubernetesNameParameter'
    clusterIDParameter:
      name: clusterID
      in: path
      description: |-
        The cluster name. Must be a valid DNS containing only lower case characters,
        numbers or hyphens, start and end with a character or number, and be at most
        63 characters in length.
      required: true
      schema:
        $ref: '#/components/schemas/kubernetesNameParameter'
    regionIDParameter:
      name: regionID
      in: path
      description: |-
        The region name.
      required: true
      schema:
        $ref: '#/components/schemas/kubernetesNameParameter'
  schemas:
    kubernetesNameParameter:
      description: A Kubernetes name. Must be a valid DNS containing only lower case characters, numbers or hyphens, start and end with a character or number, and be at most 63 characters in length.
      type: string
      minLength: 1
      maxLength: 63
    oauth2Error:
      description: Generic error message.
      type: object
      required:
      - error
      - error_description
      properties:
        error:
          description: A terse error string expanding on the HTTP error code. Errors are based on the OAuth2 specification, but are expanded with proprietary status codes for APIs other than those specified by OAuth2.
          type: string
          enum:
          # Defined by OAuth2
          - invalid_request
          - unauthorized_client
          - access_denied
          - unsupported_response_type
          - invalid_scope
          - server_error
          - temporarily_unavailable
          - invalid_client
          - invalid_grant
          - unsupported_grant_type
          # Proprietary
          - not_found
          - conflict
          - method_not_allowed
          - unsupported_media_type
          - forbidden
        error_description:
          description: Verbose message describing the error.
          type: string
    regionRead:
      description: A region.
      type: object
      required:
      - metadata
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/resourceReadMetadata'
    regions:
      description: A list of regions.
      type: array
      items:
        $ref: '#/components/schemas/regionRead'
    clusterManagerRead:
      description: A cluster manager.
      type: object
      required:
      - metadata
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/projectScopedResourceReadMetadata'
    clusterManagerWrite:
      description: A cluster manager.
      type: object
      required:
      - metadata
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/resourceWriteMetadata'
    clusterManagers:
      description: A list of cluster managers.
      type: array
      items:
        $ref: '#/components/schemas/clusterManagerRead'
    kubernetesClusterNetwork:
      description: A kubernetes cluster network settings.
      type: object
      properties:
        nodePrefix:
          description: Network prefix to provision nodes in. Must be a valid CIDR block.
          type: string
        servicePrefix:
          description: Network prefix to provision services in. Must be a valid CIDR block.
          type: string
        podPrefix:
          description: Network prefix to provision pods in. Must be a valid CIDR block.
          type: string
        dnsNameservers:
          description: A list of DNS name server to use.
          type: array
          items:
            description: A DNS nameserver IPv4 address.
            type: string
    kubernetesClusterAPI:
      description: Kubernetes API settings.
      type: object
      properties:
        subjectAlternativeNames:
          description: Set of non-standard X.509 SANs to add to the API certificate.
          type: array
          minItems: 1
          items:
            description: An X.509 SAN.
            type: string
        allowedPrefixes:
          description: Set of address prefixes to allow access to the Kubernetes API.
          type: array
          minItems: 1
          items:
            description: An IPv4 CIDR address prefix.
            type: string
    volume:
      description: A volume.
      type: object
      required:
      - size
      properties:
        size:
          description: Disk size in GiB.
          type: integer
    machinePool:
      description: A Kubernetes cluster machine.
      type: object
      properties:
        replicas:
          description: Number of machines for a statically sized pool or the maximum
            for an auto-scaled pool.
          type: integer
        flavorName:
          description: Flavor name.
          type: string
          minLength: 1
        disk:
          $ref: '#/components/schemas/volume'
    kubernetesClusterAutoscaling:
      description: |-
        A Kubernetes cluster workload pool autoscaling configuration. Cluster autoscaling
        must also be enabled in the cluster features.
      type: object
      required:
      - minimumReplicas
      properties:
        minimumReplicas:
          description: |-
            The minimum number of replicas to allow. Must be less than the maximum.
          type: integer
    kubernetesClusterWorkloadPool:
      description: A Kuberntes cluster workload pool.
      type: object
      required:
      - name
      - machine
      properties:
        name:
          description: Workload pool name.
          type: string
        machine:
          $ref: '#/components/schemas/machinePool'
        labels:
          description: Workload pool key value labels to apply on node creation.
          type: object
          additionalProperties:
            description: A string value.
            type: string
        autoscaling:
          $ref: '#/components/schemas/kubernetesClusterAutoscaling'
    kubernetesClusterWorkloadPools:
      description: A list of Kubernetes cluster workload pools.
      type: array
      minItems: 1
      items:
        $ref: '#/components/schemas/kubernetesClusterWorkloadPool'
    kubernetesClusterSpec:
      description: Kubernetes cluster creation parameters.
      type: object
      required:
      - region
      - version
      - workloadPools
      properties:
        region:
          description: The region to provision the cluster in.
          type: string
        clusterManager:
          description: |-
            The name of the cluster manager to use, if one is not specified
            the system will create one for you.
          type: string
        version:
          description: The Kuebernetes version.  This should be derived from
            image metadata.
          type: string
        workloadPools:
          $ref: '#/components/schemas/kubernetesClusterWorkloadPools'
    kubernetesClusterRead:
      description: Kubernetes cluster read.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/projectScopedResourceReadMetadata'
        spec:
          $ref: '#/components/schemas/kubernetesClusterSpec'
    kubernetesClusterWrite:
      description: Kubernetes cluster create or update.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/resourceWriteMetadata'
        spec:
          $ref: '#/components/schemas/kubernetesClusterSpec'
    kubernetesClusters:
      description: A list of Kubernetes clusters.
      type: array
      items:
        $ref: '#/components/schemas/kubernetesClusterRead'
    applicationVersion:
      description: An application version.
      type: object
      required:
      - version
      properties:
        version:
          description: The application's Helm chart version.
          type: string
        dependencies:
          $ref: '#/components/schemas/applicationDependencies'
        recommends:
          $ref: '#/components/schemas/applicationRecommends'
    applicationVersions:
      description: A set of application versions.
      type: array
      items:
        $ref: '#/components/schemas/applicationVersion'
    applicationTags:
      description: A set of tags for filtering applications.
      type: array
      items:
        description: An application tag.
        type: string
    applicationDependency:
      description: An application dependency.
      type: object
      required:
      - name
      properties:
        name:
          description: The application name.
          type: string
    applicationDependencies:
      description: A set of applications that will be installed before this application.
      type: array
      items:
        $ref: '#/components/schemas/applicationDependency'
    applicationRecommends:
      description: A set of recommended application that may be installed after this application.
      type: array
      items:
        $ref: '#/components/schemas/applicationDependency'
    applicationSpec:
      description: An application.
      type: object
      required:
      - humanReadableName
      - documentation
      - license
      - icon
      - versions
      properties:
        humanReadableName:
          description: Human readable application name.
          type: string
        documentation:
          description: Documentation link for the application.
          type: string
          format: uri
        license:
          description: The license under which the application is released.
          type: string
        icon:
          description: A base64 encoded SVG icon.  This should work in both light and dark themes.
          type: string
          format: byte
        versions:
          $ref: '#/components/schemas/applicationVersions'
        tags:
          $ref: '#/components/schemas/applicationTags'
    applicationRead:
      type: object
      required:
      - spec
      - metadata
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/resourceReadMetadata'
        spec:
          $ref: '#/components/schemas/applicationSpec'
    applications:
      description: A list of appications.
      type: array
      items:
        $ref: '#/components/schemas/applicationRead'
    imageVersions:
      description: Image version metadata.
      type: object
      required:
      - kubernetes
      - nvidiaDriver
      properties:
        kubernetes:
          description: |-
            The kubernetes semantic version.  This should be used directly when specifying
            Kubernetes cluster managers and workload pools in a cluster specification.
          type: string
        nvidiaDriver:
          description: The nvidia driver version.
          type: string
    image:
      description: An image.
      type: object
      required:
      - id
      - name
      - created
      - modified
      - versions
      properties:
        id:
          description: The unique image ID.
          type: string
        name:
          description: The image name.
          type: string
        created:
          description: |-
            Time when the image was created. Images with a newer creation time should
            be favoured over older images as they will contain updates and fewer vulnerabilities.
          type: string
          format: date-time
        modified:
          description: Time when the image was last modified.
          type: string
          format: date-time
        versions:
          $ref: '#/components/schemas/imageVersions'
    images:
      description: A list of images that are compatible with this platform.
      type: array
      items:
        $ref: '#/components/schemas/image'
    flavor:
      description: A flavor.
      type: object
      required:
      - id
      - name
      - cpus
      - memory
      - disk
      properties:
        id:
          description: The unique flavor ID.
          type: string
        name:
          description: The flavor name.
          type: string
        cpus:
          description: The number of CPUs.
          type: integer
        memory:
          description: The amount of memory in GiB.
          type: integer
        disk:
          description: The amount of ephemeral disk in GB.
          type: integer
        gpus:
          description: The number of GPUs, if not set there are none.
          type: integer
    flavors:
      description: A list of flavors.
      type: array
      items:
        $ref: '#/components/schemas/flavor'
  requestBodies:
    createControlPlaneRequest:
      description: Control plane request parameters.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/clusterManagerWrite'
          example:
            metadata:
              name: default
    createKubernetesClusterRequest:
      description: Kubernetes cluster request parameters.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/kubernetesClusterWrite'
          example:
            metadata:
              name: cluster
            spec:
              region: uk-east-1
              version: v1.27.2
              workloadPools:
              - autoscaling:
                  minimumReplicas: 0
                machine:
                  flavorName: g.4.highmem.a100.1g.10gb
                  replicas: 3
                name: default
  responses:
    regionsResponse:
      description: A list of regions.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/regions'
          example:
          - metadata:
              id: c7568e2d-f9ab-453d-9a3a-51375f78426b
              name: uk-west
              description: An oxymoronic tier-3 datacenter based in Liverpool.
              creationTime: 2023-07-31T10:45:45Z
              provisioningStatus: provisioned
    clusterManagerResponse:
      description: A cluster manager.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/clusterManagerRead'
          example:
            metadata:
              id: c7568e2d-f9ab-453d-9a3a-51375f78426b
              name: default 
              organizationId: d4600d6e-e965-4b44-a808-84fb2fa36702
              projectId: cae219d7-10e5-4601-8c2c-ee7e066b93ce
              creationTime: 2023-07-31T10:45:45Z
              provisioningStatus: provisioned
    clusterManagersResponse:
      description: A list of cluster managers.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/clusterManagers'
          example:
          - metadata:
              id: c7568e2d-f9ab-453d-9a3a-51375f78426b
              name: default
              organizationId: d4600d6e-e965-4b44-a808-84fb2fa36702
              projectId: cae219d7-10e5-4601-8c2c-ee7e066b93ce
              creationTime: 2023-07-31T10:45:45Z
              provisioningStatus: provisioned
    kubernetesClusterKubeconfigResponse:
      description: A Kubernetes cluster configuration.
      content:
        application/octet-stream: {}
    kubernetesClustersResponse:
      description: A list of Kubernetes clusters.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/kubernetesClusters'
          example:
          - metadata:
              id: c7568e2d-f9ab-453d-9a3a-51375f78426b
              name: cluster
              organizationId: d4600d6e-e965-4b44-a808-84fb2fa36702
              projectId: cae219d7-10e5-4601-8c2c-ee7e066b93ce
              creationTime: 2023-07-31T10:45:45Z
              provisioningStatus: provisioned
            spec:
              region: uk-east-1
              version: v1.27.2
              clusterManager: b85525fc-40ca-482b-ac07-eca8b01b09c2
              workloadPools:
              - name: default
                machine:
                  disk:
                    size: 50
                  flavorName: g.4.highmem.a100.1g.10gb
                  replicas: 3
    applicationResponse:
      description: A list of available applications.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/applications'
          example:
          - metadata:
              id: c7568e2d-f9ab-453d-9a3a-51375f78426b
              name: longhorn
              description: |-
                Provides an alternative replicated storage provider that distributes storage across
                the Kubernetes cluster.  Features high-availabilty, incremental snapshots and backups,
                disaster recovery, and shared file mounts (read/write many).
              creationTime: 2023-07-31T10:45:45Z
              provisioningStatus: unknown
            spec:
              documentation: https://longhorn.io/
              humanReadableName: Longhorn
              icon: PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxOTQuMjU2MTkgMTU5LjA4OTEyIj48dGl0bGU+aWNvbjwvdGl0bGU+PHBhdGggZmlsbD0iIzVmMjI0YSIgZD0iTTk3LjEyODEsODAuNjI2OWExMC4wMDksMTAuMDA5LDAsMCwxLTEuOTU4LS4xOTMzNmwtNS4yODM5NC0xLjA1NDkzLDQuNTQ4NTksMjcuOTgzMTVhOS45MjQyOSw5LjkyNDI5LDAsMCwxLC4xMjk4OCwxLjYwNDQ5aDUuMTI2YTkuOTk5Nyw5Ljk5OTcsMCwwLDEsLjE2MzA4LTEuNzk3MzZsNS4wOTgxNS0yNy45MDY0M0w5OS4wODYxLDgwLjQzMzU0QTEwLjAwODkyLDEwLjAwODkyLDAsMCwxLDk3LjEyODEsODAuNjI2OVoiLz48cGF0aCBmaWxsPSIjNWYyMjRhIiBkPSJNMTczLjY5NTYsMEgyMC41NjA3MUEyMC42MjEwNSwyMC42MjEwNSwwLDAsMCwwLDIwLjU2MDY3VjEzOC41Mjg0NWEyMC42MjEwNiwyMC42MjEwNiwwLDAsMCwyMC41NjA2NywyMC41NjA2N0gxNzMuNjk1NmEyMC42MjEsMjAuNjIxLDAsMCwwLDIwLjU2MDU1LTIwLjU2MDY3VjIwLjU2MDY3QTIwLjYyMSwyMC42MjEsMCwwLDAsMTczLjY5NTYsMFptMy40NTUsNDEuNTgxLTIuNTAyLDE3YTEwLjAwMDYsMTAuMDAwNiwwLDAsMS03LjkzNTU0LDguMzUwNThMMTI2LjA0NTQ1LDc1LjA1MWMtLjAwNy4wNDA3MS0uMDA4NTQuMDgxMDYtLjAxNi4xMjE3N2wtNi4zNjYyMSwzNC44NTA1OEEyMC4wMjY1LDIwLjAyNjUsMCwwLDEsOTkuNjkwNiwxMjguOTY2MjVoLTUuMTI2YTIwLjAyNTg3LDIwLjAyNTg3LDAsMCwxLTE5Ljk3ODUyLTE5LjA1ODFMNjguOTQ0NzUsNzUuMTk3NThsLTQxLjQwMTYyLTguMjY2QTEwLjAwMDYsMTAuMDAwNiwwLDAsMSwxOS42MDc1OSw1OC41ODFsLTIuNTAyLTE3YTEwLjAwMDEzLDEwLjAwMDEzLDAsMCwxLDE5Ljc4NzExLTIuOTEyMTFsMS40NzU1OSwxMC4wMjkzTDk3LjEyODEsNjAuNDI5NjNsNTguNzU5NzYtMTEuNzMxNDQsMS40NzU1OS0xMC4wMjkzQTEwLjAwMDEzLDEwLjAwMDEzLDAsMCwxLDE3Ny4xNTA1Niw0MS41ODFaIi8+PC9zdmc+Cg==
              license: Apache-2.0 License
              versions:
              - version: 1.5.1
    imagesResponse:
      description: A list of images that are compatible with this platform.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/images'
          example:
          - created: 2023-02-22T12:04:13Z
            id: a64f9269-36e0-4312-b8d1-52d93d569b7b
            modified: 2023-02-22T12:15:18Z
            name: ubu2204-v1.25.6-gpu-525.85.05-7ced4154
            versions:
              kubernetes: v1.25.6
              nvidiaDriver: 525.85.05
    flavorsResponse:
      description: A list of flavors.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/flavors'
          example:
          - cpus: 4
            disk: 20
            gpus: 1
            id: 9a8c6370-4065-4d4a-9da0-7678df40cd9d
            memory: 32
            name: g.4.highmem.a100.1g.10gb
  securitySchemes:
    oauth2Authentication:
      description: Operation requires OAuth2 bearer token authentication.
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://identity.unikorn-cloud.org/oauth2/v2/authorization
          tokenUrl: https://identity.unikorn-cloud.org/oauth2/v2/token
          scopes: {}
